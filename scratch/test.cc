#include "ns3/core-module.h"
#include "ns3/network-module.h"
#include "ns3/ndnSIM-module.h"
#include "ns3/point-to-point-module.h"
#include <ns3/ndnSIM/utils/tracers/ndn-cs-tracer.h>
#include <ns3/ndnSIM/utils/tracers/ndn-app-delay-tracer.h>
#include <iostream>

//using namespace std;
using namespace ns3;
int main (int argc, char *argv[])
{
 // Read optional command-line parameters (e.g., enable visualizer with ./waf --run=<> --visualize
  // setting default parameters for PointToPoint links and channels
  Config::SetDefault ("ns3::PointToPointNetDevice::DataRate", StringValue ("100Mbps"));
  Config::SetDefault ("ns3::PointToPointChannel::Delay", StringValue ("1ms"));
  Config::SetDefault ("ns3::DropTailQueue::MaxPackets", StringValue ("100"));
  CommandLine cmd;
  cmd.Parse (argc, argv);
  AnnotatedTopologyReader topologyReader ("", 10);
  topologyReader.SetFileName ("topo/topo100.txt");
  topologyReader.Read ();
  /*PointToPointHelper p2p;
  // Creating nodes
  Ptr<Node> Node1 = CreateObject<Node> ();
  Ptr<Node> Node2 = CreateObject<Node> ();
  Ptr<Node> Node3 = CreateObject<Node> ();
  Ptr<Node> Node4 = CreateObject<Node> ();
  Ptr<Node> Node5 = CreateObject<Node> ();
  Ptr<Node> Node6 = CreateObject<Node> ();
  Ptr<Node> Node7 = CreateObject<Node> ();
  p2p.Install(Node1, Node2);
  p2p.Install(Node1, Node3);
  p2p.Install(Node2, Node4);
  p2p.Install(Node2, Node6);
  p2p.Install(Node3, Node4);
  p2p.Install(Node3, Node7);
  p2p.Install(Node4, Node5);
  p2p.Install(Node5, Node6);
  p2p.Install(Node5, Node7);*/
  // Install CCNx stack on all nodes
  ndn::StackHelper ccnxHelper;
  ccnxHelper.SetDefaultRoutes(true);
  //ccnxHelper.InstallAll ();
  // Installing applications
  ccnxHelper.SetPit ("ns3::ndn::pit::Lru","MaxSize", "1000");
  ccnxHelper.SetContentStore ("ns3::ndn::cs::Lru","MaxSize", "1000");
 // ccnxHelper.SetForwardingStrategy ("ns3::ndn::fw::Flooding");
  ccnxHelper.SetForwardingStrategy ("ns3::ndn::fw::BestRoute");
  //ccnxHelper.SetForwardingStrategy ("ns3::ndn::fw::SmartFlooding");
  ccnxHelper.InstallAll ();
 
  // Installing global routing interface on all nodes
  ndn::GlobalRoutingHelper ccnxGlobalRoutingHelper;
  ccnxGlobalRoutingHelper.InstallAll ();
  //Add /prefix origins to ndn::GlobalRouter
Ptr<Node> Node0 = Names::Find<Node>("0");
Ptr<Node> Node1 = Names::Find<Node>("1");
Ptr<Node> Node2 = Names::Find<Node>("2");
Ptr<Node> Node3 = Names::Find<Node>("3");
Ptr<Node> Node4 = Names::Find<Node>("4");
Ptr<Node> Node5 = Names::Find<Node>("5");
Ptr<Node> Node6 = Names::Find<Node>("6");
Ptr<Node> Node7 = Names::Find<Node>("7");
Ptr<Node> Node8 = Names::Find<Node>("8");
Ptr<Node> Node9 = Names::Find<Node>("9");
Ptr<Node> Node10 = Names::Find<Node>("10");
Ptr<Node> Node11 = Names::Find<Node>("11");
Ptr<Node> Node12 = Names::Find<Node>("12");
Ptr<Node> Node13 = Names::Find<Node>("13");
Ptr<Node> Node14 = Names::Find<Node>("14");
Ptr<Node> Node15 = Names::Find<Node>("15");
Ptr<Node> Node16 = Names::Find<Node>("16");
Ptr<Node> Node17 = Names::Find<Node>("17");
Ptr<Node> Node18 = Names::Find<Node>("18");
Ptr<Node> Node19 = Names::Find<Node>("19");
Ptr<Node> Node20 = Names::Find<Node>("20");
Ptr<Node> Node21 = Names::Find<Node>("21");
Ptr<Node> Node22 = Names::Find<Node>("22");
Ptr<Node> Node23 = Names::Find<Node>("23");
Ptr<Node> Node24 = Names::Find<Node>("24");
Ptr<Node> Node25 = Names::Find<Node>("25");
Ptr<Node> Node26 = Names::Find<Node>("26");
Ptr<Node> Node27 = Names::Find<Node>("27");
Ptr<Node> Node28 = Names::Find<Node>("28");
Ptr<Node> Node29 = Names::Find<Node>("29");
Ptr<Node> Node30 = Names::Find<Node>("30");
Ptr<Node> Node31 = Names::Find<Node>("31");
Ptr<Node> Node32 = Names::Find<Node>("32");
Ptr<Node> Node33 = Names::Find<Node>("33");
Ptr<Node> Node34 = Names::Find<Node>("34");
Ptr<Node> Node35 = Names::Find<Node>("35");
Ptr<Node> Node36 = Names::Find<Node>("36");
Ptr<Node> Node37 = Names::Find<Node>("37");
Ptr<Node> Node38 = Names::Find<Node>("38");
Ptr<Node> Node39 = Names::Find<Node>("39");
Ptr<Node> Node40 = Names::Find<Node>("40");
Ptr<Node> Node41 = Names::Find<Node>("41");
Ptr<Node> Node42 = Names::Find<Node>("42");
Ptr<Node> Node43 = Names::Find<Node>("43");
Ptr<Node> Node44 = Names::Find<Node>("44");
Ptr<Node> Node45 = Names::Find<Node>("45");
Ptr<Node> Node46 = Names::Find<Node>("46");
Ptr<Node> Node47 = Names::Find<Node>("47");
Ptr<Node> Node48 = Names::Find<Node>("48");
Ptr<Node> Node49 = Names::Find<Node>("49");
Ptr<Node> Node50 = Names::Find<Node>("50");
Ptr<Node> Node51 = Names::Find<Node>("51");
Ptr<Node> Node52 = Names::Find<Node>("52");
Ptr<Node> Node53 = Names::Find<Node>("53");
Ptr<Node> Node54 = Names::Find<Node>("54");
Ptr<Node> Node55 = Names::Find<Node>("55");
Ptr<Node> Node56 = Names::Find<Node>("56");
Ptr<Node> Node57 = Names::Find<Node>("57");
Ptr<Node> Node58 = Names::Find<Node>("58");
Ptr<Node> Node59 = Names::Find<Node>("59");
Ptr<Node> Node60 = Names::Find<Node>("60");
Ptr<Node> Node61 = Names::Find<Node>("61");
Ptr<Node> Node62 = Names::Find<Node>("62");
Ptr<Node> Node63 = Names::Find<Node>("63");
Ptr<Node> Node64 = Names::Find<Node>("64");
Ptr<Node> Node65 = Names::Find<Node>("65");
Ptr<Node> Node66 = Names::Find<Node>("66");
Ptr<Node> Node67 = Names::Find<Node>("67");
Ptr<Node> Node68 = Names::Find<Node>("68");
Ptr<Node> Node69 = Names::Find<Node>("69");
Ptr<Node> Node70 = Names::Find<Node>("70");
Ptr<Node> Node71 = Names::Find<Node>("71");
Ptr<Node> Node72 = Names::Find<Node>("72");
Ptr<Node> Node73 = Names::Find<Node>("73");
Ptr<Node> Node74 = Names::Find<Node>("74");
Ptr<Node> Node75 = Names::Find<Node>("75");
Ptr<Node> Node76 = Names::Find<Node>("76");
Ptr<Node> Node77 = Names::Find<Node>("77");
Ptr<Node> Node78 = Names::Find<Node>("78");
Ptr<Node> Node79 = Names::Find<Node>("79");
Ptr<Node> Node80 = Names::Find<Node>("80");
Ptr<Node> Node81 = Names::Find<Node>("81");
Ptr<Node> Node82 = Names::Find<Node>("82");
Ptr<Node> Node83 = Names::Find<Node>("83");
Ptr<Node> Node84 = Names::Find<Node>("84");
Ptr<Node> Node85 = Names::Find<Node>("85");
Ptr<Node> Node86 = Names::Find<Node>("86");
Ptr<Node> Node87 = Names::Find<Node>("87");
Ptr<Node> Node88 = Names::Find<Node>("88");
Ptr<Node> Node89 = Names::Find<Node>("89");
Ptr<Node> Node90 = Names::Find<Node>("90");
Ptr<Node> Node91 = Names::Find<Node>("91");
Ptr<Node> Node92 = Names::Find<Node>("92");
Ptr<Node> Node93 = Names::Find<Node>("93");
Ptr<Node> Node94 = Names::Find<Node>("94");
Ptr<Node> Node95 = Names::Find<Node>("95");
Ptr<Node> Node96 = Names::Find<Node>("96");
Ptr<Node> Node97 = Names::Find<Node>("97");
Ptr<Node> Node98 = Names::Find<Node>("98");
Ptr<Node> Node99 = Names::Find<Node>("99");
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node0);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node1);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node2);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node3);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node4);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node5);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node6);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node7);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node8);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node9);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node10);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node11);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node12);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node13);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node14);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node15);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node16);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node17);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node18);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node19);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node20);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node21);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node22);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node23);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node24);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node25);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node26);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node27);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node28);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node29);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node30);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node31);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node32);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node33);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node34);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node35);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node36);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node37);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node38);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node39);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node40);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node41);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node42);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node43);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node44);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node45);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node46);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node47);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node48);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node49);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node50);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node51);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node52);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node53);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node54);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node55);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node56);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node57);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node58);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node59);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node60);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node61);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node62);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node63);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node64);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node65);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node66);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node67);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node68);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node69);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node70);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node71);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node72);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node73);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node74);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node75);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node76);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node77);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node78);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node79);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node80);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node81);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node82);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node83);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node84);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node85);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node86);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node87);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node88);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node89);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node90);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node91);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node92);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node93);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node94);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node95);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node96);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node97);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node98);
ccnxGlobalRoutingHelper.AddOrigins ("/ndn/vod/nc", Node99);
ndn::AppHelper Client("ns3::ndn::ConsumerCbr");
//ndn::AppHelper Client("ns3::ndn::ConsumerZipfMandelbrot");
Client.SetPrefix("/ndn/vod/nc");
Client.SetAttribute("Frequency", StringValue("20"));
Client.Install (Node0);
Client.Install (Node1);
Client.Install (Node2);
Client.Install (Node3);
Client.Install (Node4);
Client.Install (Node5);
Client.Install (Node6);
Client.Install (Node7);
Client.Install (Node8);
Client.Install (Node9);
Client.Install (Node10);
Client.Install (Node11);
Client.Install (Node12);
Client.Install (Node13);
Client.Install (Node14);
Client.Install (Node15);
Client.Install (Node16);
Client.Install (Node17);
Client.Install (Node18);
Client.Install (Node19);
Client.Install (Node20);
Client.Install (Node21);
Client.Install (Node22);
Client.Install (Node23);
Client.Install (Node24);
Client.Install (Node25);
Client.Install (Node26);
Client.Install (Node27);
Client.Install (Node28);
Client.Install (Node29);
Client.Install (Node30);
Client.Install (Node31);
Client.Install (Node32);
Client.Install (Node33);
Client.Install (Node34);
Client.Install (Node35);
Client.Install (Node36);
Client.Install (Node37);
Client.Install (Node38);
Client.Install (Node39);
Client.Install (Node40);
Client.Install (Node41);
Client.Install (Node42);
Client.Install (Node43);
Client.Install (Node44);
Client.Install (Node45);
Client.Install (Node46);
Client.Install (Node47);
Client.Install (Node48);
Client.Install (Node49);
Client.Install (Node50);
Client.Install (Node51);
Client.Install (Node52);
Client.Install (Node53);
Client.Install (Node54);
Client.Install (Node55);
Client.Install (Node56);
Client.Install (Node57);
Client.Install (Node58);
Client.Install (Node59);
Client.Install (Node60);
Client.Install (Node61);
Client.Install (Node62);
Client.Install (Node63);
Client.Install (Node64);
Client.Install (Node65);
Client.Install (Node66);
Client.Install (Node67);
Client.Install (Node68);
Client.Install (Node69);
Client.Install (Node70);
Client.Install (Node71);
Client.Install (Node72);
Client.Install (Node73);
Client.Install (Node74);
Client.Install (Node75);
Client.Install (Node76);
Client.Install (Node77);
Client.Install (Node78);
Client.Install (Node79);
Client.Install (Node80);
Client.Install (Node81);
Client.Install (Node82);
Client.Install (Node83);
Client.Install (Node84);
Client.Install (Node85);
Client.Install (Node86);
Client.Install (Node87);
Client.Install (Node88);
Client.Install (Node89);
Client.Install (Node90);
Client.Install (Node91);
Client.Install (Node92);
Client.Install (Node93);
Client.Install (Node94);
Client.Install (Node95);
Client.Install (Node96);
Client.Install (Node97);
Client.Install (Node98);
Client.Install (Node99);


  /*ndn::AppHelper producer("ns3::ndn::Producer");
  producer.SetPrefix("/ndn/vod/nc");
  producer.SetAttribute("PayloadSize", StringValue("1024"));
  producer.Install (one);*/
  //ccnxGlobalRoutingHelper.CalculateRoutes ();
  //ApplicationContainer app4 = producer.Install(node4);
  //ApplicationContainer app4 = producer.Install(node4);
  //ApplicationContainer app4 = producer.Install(node4);
  //ApplicationContainer app4 = producer.Install(node4);
  
  ndn::AppHelper consumerHelper ("NetworkCodingApp");
  //ApplicationContainer app1 = consumerHelper.Install (node1); 
  //ApplicationContainer app2 = consumerHelper.Install (node2);
  //ApplicationContainer app3 = consumerHelper.Install (node3);
  //ApplicationContainer app1 = producer.Install (node1);
  consumerHelper.Install (Node48);
 // consumerHelper.Install (Node30);
 // consumerHelper.Install (Node60);
  ccnxGlobalRoutingHelper.CalculateRoutes ();
  //app1.Start(Seconds (0.0)); // will send out Interest, which nobody will receive (Interests generated by an app will not got back to the app)
  //app1.Stop(Seconds(20.0));
  //app6.Start (Seconds (1.0)); // will send out an Interests, which will be received and satisfied by app1
  //app7.Start (Seconds (1.0));
  boost::tuple< boost::shared_ptr<std::ostream>, std::list<Ptr<ndn::L3AggregateTracer> > >
  AggregateTracer = ndn::L3AggregateTracer::InstallAll ("data-bestroute/nc100/aggregate-trace.txt", Seconds (0.5));
 
  boost::tuple< boost::shared_ptr<std::ostream>, std::list<Ptr<ndn::L3RateTracer> > >
  L3RateTracer = ndn::L3RateTracer::InstallAll ("data-bestroute/nc100/rate-trace.txt", Seconds (0.5));
 
  boost::tuple< boost::shared_ptr<std::ostream>, std::list<Ptr<ndn::CsTracer> > >
  aggTracers = ndn::CsTracer::InstallAll ("data-bestroute/nc100/cs-trace.txt", Seconds (1));
 
  boost::tuple< boost::shared_ptr<std::ostream>, std::list<Ptr<ndn::AppDelayTracer> > >
  delayTracer = ndn::AppDelayTracer::InstallAll ("data-bestroute/nc100/app-delays-trace.txt");

  Simulator::Stop (Seconds (600.0));
  Simulator::Run ();
  for (NodeList::Iterator node = NodeList::Begin (); node != NodeList::End (); node ++)
  {
    std::cout << "Node #" << (*node)->GetId () << std::endl;
    (*node)->GetObject<ndn::ContentStore> ()->Print (std::cout);
      std::cout << std::endl;
  }
  Simulator::Destroy ();
  return 0;
}

